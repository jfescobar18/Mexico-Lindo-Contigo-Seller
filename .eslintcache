[{"/usr/src/src/index.js":"1","/usr/src/src/reportWebVitals.js":"2","/usr/src/src/assets/js/components/App.js":"3","/usr/src/src/assets/js/components/Login.js":"4","/usr/src/src/assets/js/components/Modal.js":"5"},{"size":333,"mtime":1608799625214,"results":"6","hashOfConfig":"7"},{"size":404,"mtime":1608799628143,"results":"8","hashOfConfig":"7"},{"size":107,"mtime":1608799617510,"results":"9","hashOfConfig":"7"},{"size":3276,"mtime":1611825164379,"results":"10","hashOfConfig":"7"},{"size":766,"mtime":1611827286261,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"b2dryy",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/usr/src/src/index.js",[],["24","25"],"/usr/src/src/reportWebVitals.js",[],"/usr/src/src/assets/js/components/App.js",[],"/usr/src/src/assets/js/components/Login.js",["26"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport Modal from './Modal';\r\n\r\nclass Login extends React.Component {\r\n    constructor(props) { // Init props and state\r\n        super(props);\r\n        this.state = {\r\n            SellerUsername: '',\r\n            SellerPassword: '',\r\n            UsernameAlert: false,\r\n            PasswordAlert: false,\r\n            ShowModal: \"0\"\r\n        };\r\n        this.SellerUsername = this.handleSellerUsername.bind(this);\r\n        this.SellerPassword = this.handleSellerPassword.bind(this);\r\n    }\r\n\r\n    handleSellerUsername = ({ target }) => {\r\n        this.setState({\r\n            SellerUsername: target.value\r\n        });\r\n    }\r\n    handleSellerPassword = ({ target }) => {\r\n        this.setState({\r\n            SellerPassword: target.value\r\n        });\r\n    }\r\n\r\n    handleLogin = () => {\r\n        let _UsernameAlert = this.state.SellerUsername.length <= 0;\r\n        let _PasswordAlert = this.state.SellerPassword.length <= 0;\r\n\r\n        this.setState({\r\n            UsernameAlert: _UsernameAlert,\r\n            PasswordAlert: _PasswordAlert\r\n        });\r\n\r\n        if (!this.state.UsernameAlert && !this.state.PasswordAlert) {\r\n            axios.post(`${process.env.API_URL}auth/seller-login`, {\r\n                SellerUsername: this.state.SellerUsername,\r\n                SellerPassword: this.state.SellerPassword\r\n            }).then(res => {\r\n                console.log(res);\r\n                console.log(res.data);\r\n            });\r\n        }\r\n    }\r\n\r\n    OpenForgotModal = () => {\r\n        this.setState({ ShowModal: \"1\" })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"login\" >\r\n                <div className=\"wrapper fadeInDown\">\r\n                    <div className=\"formContent\">\r\n                        <h2 className=\"active\"> Sign In </h2>\r\n\r\n                        <div className=\"fadeIn first\">\r\n                            <i className=\"fas fa-user-circle icon\"></i>\r\n                        </div>\r\n\r\n                        <form>\r\n                            <input type=\"text\" onChange={this.handleSellerUsername} className=\"fadeIn second\" name=\"login\" placeholder=\"login\" />\r\n                            <small className={this.state.UsernameAlert ? \"active\" : \"\"} >This field cannot be empty</small>\r\n\r\n                            <input type=\"password\" onChange={this.handleSellerPassword} className=\"fadeIn third\" name=\"login\" placeholder=\"password\" />\r\n                            <small className={this.state.PasswordAlert ? \"active\" : \"\"} >This field cannot be empty</small>\r\n\r\n                            <input type=\"button\" onClick={this.handleLogin} className=\"fadeIn fourth\" value=\"Log In\" />\r\n                        </form>\r\n\r\n                        <div className=\"formFooter\">\r\n                            <a className=\"underlineHover\" href=\"#\" onClick={this.OpenForgotModal}>Forgot Password?</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <Modal Show={this.state.ShowModal}\r\n                    Header=\"Forgot Password\"\r\n                    Body=\"<p>For password recovery please contact support<p/>\"\r\n                    Footer=\"\" />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;","/usr/src/src/assets/js/components/Modal.js",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":76,"column":29,"nodeType":"33","endLine":76,"endColumn":99},"no-native-reassign",["34"],"no-negated-in-lhs",["35"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]